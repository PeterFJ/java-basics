一、什么是内部类？
    可以将一个类的定义放在里另一个类的内部，这就是内部类。广义上我们将内部类分为四种：成员内部类、静态内部类、局部（方法）内部类、
    匿名内部类。
二、为什么要用内部类？
    使用内部类最吸引人的原因是：每个内部类都能独立地继承一个（接口的）实现，所以无论外围类是否已经继承了某个（接口的）实现，对于
    内部类都没有影响。——《Think in java》

    也就是说内部类拥有类的基本特征。(eg：可以继承父类，实现接口。)在实际问题中我们会遇到一些接口无法解决或难以解决的问题，此时我
    们可以使用内部类继承某个具体的或抽象的类，间接解决类无法多继承引起的一系列问题。（注：内部类可以嵌套内部类，但是这极大的破换
    了代码的结构，这里不推荐使用。）

    优点：
    1、内部类可以用多个实例，每个实例都有自己的状态信息，并且与其他外围对象的信息相互独立。
    2、内部类并没有令人迷惑的“is-a”关系，他就是一个独立的实体。
    3、内部类提供了更好的封装，除了该外围类，其他类都不能访问。
    4、创建内部类对象的时刻并不依赖于外围类对象的创建。

